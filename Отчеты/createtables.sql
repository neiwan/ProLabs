-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Card"
(
    card_id integer NOT NULL,
    category_id integer NOT NULL,
    type_id integer,
    card_type character varying[],
    card_gpu_name character varying[],
    gpu integer,
    ram integer,
    cooler_num integer,
    card_price integer,
    card_num integer,
    CONSTRAINT "Card_pkey" PRIMARY KEY (card_id)
);

CREATE TABLE IF NOT EXISTS public."Card_order"
(
    card_id integer,
    order_id integer,
    card_order_id integer,
    PRIMARY KEY (card_order_id)
);

CREATE TABLE IF NOT EXISTS public."User"
(
    user_id integer NOT NULL,
    user_name character varying[] COLLATE pg_catalog."default",
    user_city character varying[] COLLATE pg_catalog."default",
    user_adres character varying[] COLLATE pg_catalog."default",
    user_role character varying[] COLLATE pg_catalog."default",
    user_login character varying[] COLLATE pg_catalog."default",
    user_password character varying[] COLLATE pg_catalog."default",
    CONSTRAINT "Customer_pkey" PRIMARY KEY (user_id)
);

CREATE TABLE IF NOT EXISTS public."Manufacturer"
(
    manufacturer_id integer NOT NULL,
    manufacturer_name character varying[] COLLATE pg_catalog."default",
    type_id integer,
    CONSTRAINT "Manufacturer_pkey" PRIMARY KEY (manufacturer_id)
);

CREATE TABLE IF NOT EXISTS public."Order"
(
    order_id integer NOT NULL,
    shipment_id integer,
    order_date date,
    CONSTRAINT "Order_pkey" PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public."Shipment"
(
    shipment_id integer NOT NULL,
    user_id integer,
    shipment_date date,
    CONSTRAINT "Shipment_pkey" PRIMARY KEY (shipment_id)
);

CREATE TABLE IF NOT EXISTS public."Shop"
(
    shop_id integer NOT NULL,
    shop_city character varying[] COLLATE pg_catalog."default",
    shop_name character varying[] COLLATE pg_catalog."default",
    CONSTRAINT "Shop_pkey" PRIMARY KEY (shop_id)
);

CREATE TABLE IF NOT EXISTS public."Type"
(
    type_id integer NOT NULL,
    type_name character varying[] COLLATE pg_catalog."default",
    CONSTRAINT "Type_pkey" PRIMARY KEY (type_id)
);

CREATE TABLE IF NOT EXISTS public."Shop_card"
(
    card_id integer,
    shop_id integer,
    card_shop_id integer,
    PRIMARY KEY (card_shop_id)
);

ALTER TABLE IF EXISTS public."Card"
    ADD CONSTRAINT category_id FOREIGN KEY (category_id)
    REFERENCES public."Manufacturer" (manufacturer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Card"
    ADD CONSTRAINT type_id FOREIGN KEY (type_id)
    REFERENCES public."Type" (type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Card_order"
    ADD CONSTRAINT card_id FOREIGN KEY (card_id)
    REFERENCES public."Card" (card_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Card_order"
    ADD CONSTRAINT order_id FOREIGN KEY (order_id)
    REFERENCES public."Order" (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Order"
    ADD CONSTRAINT shipment_id FOREIGN KEY (shipment_id)
    REFERENCES public."Shipment" (shipment_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Shipment"
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."User" (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Shop_card"
    ADD FOREIGN KEY (card_id)
    REFERENCES public."Card" (card_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Shop_card"
    ADD CONSTRAINT shop_id FOREIGN KEY (shop_id)
    REFERENCES public."Shop" (shop_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;